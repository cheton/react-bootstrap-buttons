@import "variables";
@import "functions";

button-outline-variant(
    $color,
    $color-hover = color-yiq($color),
    $active-background = $color,
    $active-border = $color,
) {
    color: $color;
    background-color: transparent;
    background-image: none;
    border-color: $color;

    .btn& > * {
        color: color-yiq($color);
    }

    &.hover,
    &:hover {
        color: $color-hover;
        background-color: $active-background;
        border-color: $active-border;
    }

    &.focus,
    &:focus {
        box-shadow: 0 0 0 $btn-focus-width rgba($color, .5);
    }

    &.disabled,
    &:disabled {
        color: $color;
        background-color: transparent;
    }

    &:not(:disabled):not(.disabled).active,
    &:not(:disabled):not(.disabled):active {
        color: color-yiq($active-background);
        background-color: $active-background;
        border-color: $active-border;

        &.focus,
        &:focus {
            // Avoid using mixin so we can pass custom focus shadow properly
            if ($enable-shadows and $btn-active-box-shadow != none) {
                box-shadow: $btn-active-box-shadow, 0 0 0 $btn-focus-width rgba($color, .5);
            } @else {
                box-shadow: 0 0 0 $btn-focus-width rgba($color, .5);
            }
        }
    }
}

.btn-outline-default {
    button-outline-variant($default);
}
.btn-outline-primary {
    button-outline-variant($primary);
}
.btn-outline-secondary {
    button-outline-variant($secondary);
}
.btn-outline-danger {
    button-outline-variant($danger);
}
.btn-outline-warning {
    button-outline-variant($warning);
}
.btn-outline-info {
    button-outline-variant($info);
}
.btn-outline-success {
    button-outline-variant($success);
}
.btn-outline-light {
    button-outline-variant($light);
}
.btn-outline-dark {
    button-outline-variant($dark);
}
